{"version":3,"file":"index.mjs","sources":["../lib/asinh.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isinfinite = require( '@stdlib/math-base-assert-is-infinite' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\n\n\n// MAIN //\n\n/**\n* Computes the hyperbolic arcsine of a number.\n*\n* @param {number} x - input value\n* @returns {number} hyperbolic arcsine (in radians)\n*\n* @example\n* var v = asinh( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = asinh( 2.0 );\n* // returns ~1.444\n*\n* @example\n* var v = asinh( -2.0 );\n* // returns ~-1.444\n*\n* @example\n* var v = asinh( NaN );\n* // returns NaN\n*/\nfunction asinh( x ) {\n\tif (\n\t\tx === 0.0 || // +-0.0\n\t\tisnan( x ) ||\n\t\tisinfinite( x )\n\t) {\n\t\treturn x;\n\t}\n\tif ( x > 0 ) {\n\t\treturn ln( x + sqrt( (x*x) + 1 ) );\n\t}\n\t// Better precision for large negative `x`:\n\treturn -ln( -x + sqrt( (x*x) + 1 ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = asinh;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the hyperbolic arcsine of a number.\n*\n* @module @stdlib/math-base-special-fast-asinh\n*\n* @example\n* var asinh = require( '@stdlib/math-base-special-fast-asinh' );\n*\n* var v = asinh( 0.0 );\n* // returns 0.0\n*\n* v = asinh( 2.0 );\n* // returns ~1.444\n*\n* v = asinh( -2.0 );\n* // returns ~-1.444\n*\n* v = asinh( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar asinh = require( './asinh.js' );\n\n\n// EXPORTS //\n\nmodule.exports = asinh;\n"],"names":["isinfinite","require$$0","isnan","require$$1","ln","require$$2","sqrt","require$$3","lib","x"],"mappings":";;6WAsBA,IAAIA,EAAaC,EACbC,EAAQC,EACRC,EAAKC,EACLC,EAAOC,EA6CX,ICtBAC,EDIA,SAAgBC,GACf,OACO,IAANA,GACAP,EAAOO,IACPT,EAAYS,GAELA,EAEHA,EAAI,EACDL,EAAIK,EAAIH,EAAOG,EAAEA,EAAK,KAGtBL,GAAKK,EAAIH,EAAOG,EAAEA,EAAK"}